{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "webAppName": {
      "type": "string"
    },
    "location": {
      "type": "string"
    },
    "hostingEnvironment": {
      "type": "string"
    },
    "hostingPlanName": {
      "type": "string"
    },
    "serverFarmResourceGroup": {
      "type": "string"
    },
    "alwaysOn": {
      "type": "bool"
    },
    "sku": {
      "type": "string"
    },
    "skuCode": {
      "type": "string"
    },
    "workerSize": {
      "type": "string"
    },
    "workerSizeId": {
      "type": "string"
    },
    "numberOfWorkers": {
      "type": "string"
    },
    "linuxFxVersion": {
      "type": "string"
    },
    "dockerRegistryUrl": {
      "type": "string"
    },
    "dockerRegistryUsername": {
      "type": "string"
    },
    "dockerRegistryPassword": {
      "type": "securestring"
    },
    "dockerRegistryStartupCommand": {
      "type": "string"
    },
    "registryName": {
      "type": "string",
      "metadata": {
        "description": "The name of the container registry."
      }
    },
    "registryLocation": {
      "type": "string",
      "metadata": {
        "description": "The location of the container registry. This cannot be changed after the resource is created."
      }
    },
    "registrySku": {
      "type": "string",
      "defaultValue": "Standard",
      "metadata": {
        "description": "The SKU of the container registry."
      }
    },
    "registryApiVersion": {
      "type": "string",
      "metadata": {
        "description": "The API version of the container registry."
      }
    },
    "adminUserEnabled": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "The value that indicates whether the admin user is enabled."
      }
    }
  },
  "variables": {
    "webAppName": "[concat(parameters('webAppName'), uniqueString(resourceGroup().id))]",
    "hostingPlanName": "[concat(parameters('hostingPlanName'), uniqueString(resourceGroup().id))]",
    "registryName": "[concat(parameters('registryName'), uniqueString(resourceGroup().id))]"
  },
    "resources": [
      {
            "apiVersion": "2018-11-01",
            "name": "[variables('webAppName')]",
            "type": "Microsoft.Web/sites",
            "location": "[parameters('location')]",
            "tags": {},
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
            ],
          "properties": {
            "name": "[variables('webAppName')]",
            "siteConfig": {
              "appSettings": [
                {
                  "name": "DOCKER_REGISTRY_SERVER_URL",
                  "value": "[parameters('dockerRegistryUrl')]"
                },
                {
                  "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                  "value": "[parameters('dockerRegistryUsername')]"
                },
                {
                  "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                  "value": "[parameters('dockerRegistryPassword')]"
                },
                {
                  "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
                  "value": "false"
                }
              ],
              "linuxFxVersion": "[parameters('linuxFxVersion')]",
              "appCommandLine": "[parameters('dockerRegistryStartupCommand')]",
              "alwaysOn": "[parameters('alwaysOn')]"
            },
            "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
            "hostingEnvironment": "[parameters('hostingEnvironment')]",
            "clientAffinityEnabled": false
          }
        },
      {
        "apiVersion": "2018-11-01",
        "name": "[variables('hostingPlanName')]",
        "type": "Microsoft.Web/serverfarms",
        "location": "[parameters('location')]",
        "kind": "linux",
        "tags": {},
        "dependsOn": [
          "[concat('Microsoft.ContainerRegistry/registries/', variables('registryName'))]"
        ],
        "properties": {
          "name": "[variables('hostingPlanName')]",
          "workerSize": "[parameters('workerSize')]",
          "workerSizeId": "[parameters('workerSizeId')]",
          "numberOfWorkers": "[parameters('numberOfWorkers')]",
          "reserved": true,
          "hostingEnvironment": "[parameters('hostingEnvironment')]"
        },
        "sku": {
          "Tier": "[parameters('sku')]",
          "Name": "[parameters('skuCode')]"
        }
      },
      {
        "name": "[variables('registryName')]",
        "type": "Microsoft.ContainerRegistry/registries",
        "location": "[parameters('registryLocation')]",
        "apiVersion": "[parameters('registryApiVersion')]",
        "sku": {
          "name": "[parameters('registrySku')]"
        },
        "properties": {
          "adminUserEnabled": "[parameters('adminUserEnabled')]"
        }
      }
    ]
}