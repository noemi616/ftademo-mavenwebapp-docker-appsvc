# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

variables:
# Agent VM image name
- name: 'vmImageName'
  value: 'ubuntu-latest'


stages:
- stage: BuildMavenApp
  displayName: Build Maven app 
  jobs:
  - job: MavenPackageAndPublishArtifacts
    displayName: Maven Package and Publish Artifacts
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'MyMavenWebApp/pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        goals: 'package'
    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        SourceFolder: '$(system.defaultworkingdirectory)'
        Contents: |
          **/target/*.war
          **/tmp/**
        TargetFolder: '$(build.artifactstagingdirectory)'
      condition: succeededOrFailed()
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
      condition: succeededOrFailed()
- stage: BuildDockerImage
  displayName: Build Docker image
  jobs:
  - job: DockerBuildImage
    displayName: Docker Build Image
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: '{"loginServer":"acr200302.azurecr.io", "id" : "/subscriptions/356dc8d8-fa7f-45d4-9252-b4a7baaebea4/resourceGroups/FTA_POC_Fusion5_WebAppCont_RG/providers/Microsoft.ContainerRegistry/registries/acr200302"}'      
        repository: 'mymavenwebapp-11-zulu-alpine-tomcat-9_0_31'
        command: 'build'
        Dockerfile: '**/MyMavenApp/Dockerfile'